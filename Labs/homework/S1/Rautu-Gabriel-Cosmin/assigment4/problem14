#!/bin/bash
# global_var_usage.sh — for each global variable in a C file, count and list its occurrences

if [ $# -ne 1 ]; then
  echo "Usage: $0 <source_file.c>"
  exit 1
fi

src="$1"
if [ ! -f "$src" ]; then
  echo "Error: '$src' not found"
  exit 1
fi

# require ctags
if ! command -v ctags >/dev/null 2>&1; then
  echo "Error: this script requires 'ctags' (e.g. Exuberant or Universal ctags)."
  exit 1
fi

# extract global and extern variables
#   ctags -x --c-kinds=gv prints lines like:
#     varName   variable   12   int varName = 0;
mapfile -t vars < <( ctags -x --c-kinds=gv "$src" \
                   | awk '{print $1}' \
                   | sort -u )

if [ ${#vars[@]} -eq 0 ]; then
  echo "No global variables found in '$src'."
  exit 0
fi

for v in "${vars[@]}"; do
  # grep for whole‐word matches, show line numbers
  mapfile -t matches < <( grep -n -w -- "$v" "$src" )
  count=${#matches[@]}

  # gather just the line numbers
  if (( count > 0 )); then
    lines=$(printf "%s\n" "${matches[@]}" | cut -d: -f1 | paste -sd, -)
  else
    lines="(none)"
  fi

  printf "Variable '%s' → %d occurrence(s); lines: %s\n" "$v" "$count" "$lines"
done
